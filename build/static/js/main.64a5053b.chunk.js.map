{"version":3,"sources":["config.js","services/token-service.js","landing-page.js","navbar.js","personalized-home-page.js","CircleButton/circle-button.js","past-workouts.js","header.js","validation-error.js","services/auth-api-service.js","log-in.js","error-boundary.js","sign-up.js","view-past-workout.js","new-workout-checkbox.js","create-new-workout.js","not-found-page.js","App.js","index.js"],"names":["TokenService","saveAuthToken","token","window","localStorage","setItem","config","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","makeBasicAuthToken","userName","password","btoa","saveUserId","userId","sessionStorage","saveUserName","first_name","getUserId","user_id","LandingPage","className","to","React","Component","Navbar","logOutClick","console","log","id","location","role","onClick","this","PersonalizedHomePage","props","NavCircleButton","tag","children","otherProps","createElement","join","PastWorkouts","appSavedWorkouts","map","workout","workouts_name","history","goBack","Header","defaultProps","ValidationError","message","AuthApiService","postLogin","credentials","fetch","method","headers","body","JSON","stringify","then","res","ok","json","e","Promise","reject","catch","err","postUser","user","Login","state","error","loginEmail","value","touched","loginPassword","errors","sessionUser","handleLoginSuccess","handleSubmit","preventDefault","data","formData","FormData","target","validateEmail","setState","validatePassword","email","response","undefined","authToken","updateSessionUser","inputEmail","trim","match","inputPassword","validationError","emailError","passwordError","onSubmit","htmlFor","name","type","placeholder","onChange","updateEmail","required","updatePassword","ErrorBoundary","hasError","errorMessage","SignUp","signUpEmail","signUpPassword","signUpFirstName","event","firstName","inputFirstName","nameError","validatateFirstName","updateFirstName","ViewPastWorkout","params","workout_id","appSavedWorkoutDetails","workoutDetail","workouts_id","key","exercise_reps","title","description","Checkbox","label","isSelected","onCheckboxChange","checked","OPTIONS","CreateNewWorkout","checkboxes","reduce","options","option","workoutTimeValue","workoutTypeValue","workoutNameValue","isSubmitted","savedWorkouts","savedWorkoutDetails","selectAllCheckboxes","Object","keys","forEach","checkbox","prevState","handleCheckboxChange","changeEvent","handleTimeChange","handleTypeChange","handleNameChange","handleFormSubmit","filter","payload","is_advanced","checkString","Advanced","is_arms","Arms","is_back","Back","is_cardio","Cardio","is_chest","Chest","is_core","Core","is_legs","Legs","total_length","workout_type","Error","totalItems","workoutDetails","saveNewWorkout","createCheckbox","createCheckboxes","getWorkoutUrl","workouts","getWorkoutDetailsUrl","inputString","outputText","showWorkouts","showWorkoutDetails","i","length","push","workoutDetailTitle","workoutDetailReps","workoutDetailDescription","NotFound","App","updateAppSavedWorkouts","newWorkout","renderMainPages","exact","path","component","render","NotFoundPage","renderNav","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.64a5053b.chunk.js","sourcesContent":["export default {\n    API_ENDPOINT: 'https://workout-creator-server.herokuapp.com/api',\n    TOKEN_KEY: 'workout-client-auth-token',\n  }\n  ","import config from '../config'\n\nconst TokenService = {\n  saveAuthToken(token) {\n    window.localStorage.setItem(config.TOKEN_KEY, token)\n  },\n  getAuthToken() {\n    return window.localStorage.getItem(config.TOKEN_KEY)\n  },\n  clearAuthToken() {\n    window.localStorage.removeItem(config.TOKEN_KEY)\n  },\n  hasAuthToken() {\n    return !!TokenService.getAuthToken()\n  },\n  makeBasicAuthToken(userName, password) {\n    return window.btoa(`${userName}:${password}`)\n  },\n  saveUserId(userId) {\n    return window.sessionStorage.setItem('user_id', userId);\n  },\n  saveUserName(first_name) {\n    return window.sessionStorage.setItem('first_name', first_name)\n  },\n  getUserId(user_id) {\n    return window.sessionStorage.getItem('user_id', user_id)\n  }\n}\n\nexport default TokenService\n","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nexport default class LandingPage extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <main className=\"main\">\n          <h1>Workout Creator</h1>\n            <p>Create your own metabolic-conditoning workout</p>\n            <p>Choose how long you want to workout for and the muscle groups you want to work, and we'll do the rest!</p>\n          <button className=\"big-btn\">\n            <Link \n              to='/sign-up'\n            > Sign Up\n            </Link>\n          </button>\n          <button className=\"big-btn\">\n          <Link\n            to='/login'>\n              Login\n          </Link>\n        </button>\n        </main>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport TokenService from './services/token-service'\n\nexport default class Navbar extends React.Component {\n  logOutClick = () => {\n    console.log('Logging out')\n    TokenService.clearAuthToken()\n    TokenService.getUserId = (id) => {\n      console.log(id)\n    }\n\n    window.location='/'\n  }\n  render() {\n    return (\n      <div className=\"navbar\">\n        <nav role=\"navigation\" className=\"nav\">\n                  {/* <label htmlFor=\"hamburger\">&#9776;</label>\n                  <input type=\"checkbox\" id=\"hamburger\"/> */}\n          {TokenService.hasAuthToken() ? <div className='nav-token'>\n            <ul className=\"menu\">\n              <li className=\"nav-link cl-home\"> <Link to='/home'>Home</Link></li>\n              <li className=\"nav-link cl-create-workout\"> <Link to='/create-workout'>Create Workout</Link></li>\n              <li className=\"nav-link cl-past-workouts\"><Link to='/past-workouts'>Past Workouts</Link></li>\n            </ul>\n            <button className=\"small-btn logout-btn\"><Link to=\"/\" onClick={this.logOutClick}>Log Out</Link></button>\n          </div> : ''}\n        </nav>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nexport default function PersonalizedHomePage(props) {\n  return (\n    <div className=\"App\">\n      <main>\n            <h1>Home</h1>\n            <div className=\"workout-btn\">\n                <button className=\"big-btn\">\n                  <Link to='/past-workouts'>\n                    Past Workouts\n                  </Link>\n                </button>\n                <button className=\"big-btn\">\n                  <Link to=\"/create-workout\">\n                    New Workout\n                  </Link>\n                </button>\n            </div>\n            <div className=\"acct-info\">\n            {/* <h2>Account Information</h2>\n                <h3>Email: {props.email} </h3>\n                <h3>Password: {props.password} </h3> */}\n                {/* <Link\n                  to='/forgot-password'\n                >\n                  <button\n                  >Change</button>\n                </Link> */}\n            </div>\n        </main>\n    </div>\n  );\n}\n","import React from 'react'\nimport './circle-button.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, children, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport CircleButton from './CircleButton/circle-button'\n\n//Display workouts where userId == session storage userId \n\nexport default function PastWorkouts(props) {\n  return (\n    <div className=\"App\">\n      <main className=\"main\">\n            <h1>Past Workouts</h1>\n            <table className=\"workouts-table\">\n              <thead>\n                <tr>\n                    <th className=\"tb-name\">Name</th>\n                    <th className=\"tb-id\">Workout ID</th>\n                    <th className=\"tb-view\">View Workout</th>\n                </tr>\n              </thead>\n              <tbody>\n              {props.appSavedWorkouts.map(workout => {\n                return (\n                <tr>\n                  <td>{workout.workouts_name}</td>\n                  <td> {workout.id} </td>\n                  <td>\n                    <button>\n                      <Link\n                        to={`/past-workouts/${workout.id}`}\n                      >\n                        View\n                      </Link>\n                    </button>\n                  </td>\n                </tr>\n              )})}\n              </tbody>\n            </table>\n            <Link\n              to='/create-workout'\n            >\n              <button>Create Workout</button>\n            </Link>\n            <div>\n              <CircleButton onClick={props.history.goBack}>\n                Go Back\n              </CircleButton>\n            </div>\n        </main>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Header(props) {\n  return (\n    <div className=\"App\">\n      <main className=\"main\">\n        <h1>MyMetcon Workout Creator</h1>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function ValidationError(props) {\n    if(props.message) {\n        return (\n            <div className='error'>{props.message}</div>\n        );\n    }\n    return <></>\n}","import config from '../config'\n\nconst AuthApiService = {\n  postLogin(credentials) {\n    return fetch(`${config.API_ENDPOINT}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify(credentials),\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n      .catch(err => {\n        console.log('error:', err)\n      })\n  },\n  postUser(user) {\n    return fetch(`${config.API_ENDPOINT}/users`, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n        },\n        body: JSON.stringify(user),\n    })\n      .then(res =>\n          (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n      .catch(err => {\n        console.log('error:', err)\n      })\n    },\n}\n\nexport default AuthApiService","import React from 'react';\nimport { Link  } from 'react-router-dom'\nimport ValidationError from './validation-error'\nimport AuthApiService from './services/auth-api-service'\nimport TokenService from './services/token-service'\n\nexport default class Login extends React.Component {\n  state = {\n    error: null,\n    loginEmail: {\n      value: '',\n      touched: false\n    },\n    loginPassword: {\n      value: '',\n      touched: false\n    },\n    errors: {\n      loginEmail: 'You must enter a valid email',\n      loginPassword: 'You must enter a valid password',\n    },\n    sessionUser: ''\n}\n\n  handleLoginSuccess = () => {\n    window.location = '/user/home'\n  }\n  \n  updateEmail(email) {\n    this.setState({ loginEmail: {value: email, touched: true } })\n  }\n\n  updatePassword(password) {\n    this.setState({ loginPassword: { value: password, touched: true } })\n  }\n\n  updateSessionUser(userId) {\n    this.setState({\n      sessionUser: userId\n    })\n  }\n\n  validateEmail(inputEmail) {\n    if (inputEmail == undefined) {\n       inputEmail = this.state.loginEmail.value.trim();\n    }\n    const mailFormat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (!inputEmail.match(mailFormat)) {\n      return 'Valid email is required'\n    } return ' '\n  }\n\n  validatePassword(inputPassword) {\n    if (inputPassword == undefined) {\n      inputPassword = this.state.loginPassword.value.trim();\n   }\n    const passwordFormat = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])\\w{8,}$/;\n    if (!inputPassword.match(passwordFormat)) {\n      return 'Valid password is required'\n    } return ' '\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    //create an object to store the search filters\n     const data = {}\n    // const { loginEmail, loginPassword } = e.target\n    \n\n    //get all the from data from the form component\n    const formData = new FormData(e.target)\n\n    //for each of the keys in form data populate it with form value\n    for (let value of formData) {\n        data[value[0]] = value[1]\n    }\n    console.log(data)\n    let {loginEmail, loginPassword} = data\n  \n    if (this.validateEmail(loginEmail) === '') {\n      this.setState({\n        error: 'You must enter a valid email'\n      })\n    }\n    if (this.validatePassword(loginPassword) === '') {\n      this.setState({\n        error: 'You must enter a valid password'\n      })\n    }\n    //assigning the object from the form data to params in the state\n    this.setState({\n        loginEmail: {\n          value: loginEmail\n        },\n        loginPassword: {\n          value: loginPassword\n        }\n    })\n\n    //check if the state is populated with the search params data\n    console.log(this.state)\n\n    AuthApiService.postLogin({\n      email: loginEmail,\n      password: loginPassword\n    })\n    .then(response => {\n      if (response === undefined) {\n        console.log('empty response')\n        this.setState({\n          error: 'Email and/or password are not valid'\n        })\n        console.log(this.state)\n      }\n      else {\n        console.log('response ID', response)\n        TokenService.saveAuthToken(response.authToken) \n        TokenService.saveUserId(response.userId)\n        TokenService.saveUserName(response.first_name)\n        window.location = `/home`\n        this.updateSessionUser(response.userId)\n        console.log(this.state.sessionUser)\n      }\n    })\n    .catch(err => {\n      console.log(err)\n      this.setState({\n        error: 'Email and/or password are not valid'\n      })\n    });\n  }\n\n  //logic that says - if user email matches password combo in \"users\"\n  //show them their homepage\n\n  render() {\n    let validationError = ''\n    if (this.state.error != '') {\n      validationError = this.state.error\n    }\n    \n    const emailError = this.validateEmail();\n    const passwordError = this.validatePassword();\n    return (\n      <div className=\"App\">\n        <main>\n            <h1>Log In</h1>\n                <form \n                  className=\"login-form\"\n                  onSubmit={this.handleSubmit}\n                >\n                  {validationError}\n                    <label className =\"user-label\" htmlFor=\"email\">Email</label>\n                    <input \n                      name=\"loginEmail\"\n                      type=\"text\" \n                      id=\"email\"\n                      placeholder=\"Email\"\n                      onChange={e => this.updateEmail(e.target.value)}\n                      required\n                    />\n                    {this.state.loginEmail.touched && <ValidationError message={emailError} />}\n                    \n                    <label className =\"user-label\" htmlFor=\"password\">Password</label>\n                    <input \n                      name=\"loginPassword\"\n                      type=\"password\" \n                      id=\"password\"\n                      placeholder=\"Password\"\n                      onChange={e => this.updatePassword(e.target.value)}\n                      required\n                    /> \n                    {this.state.loginPassword.touched && <ValidationError message={passwordError} />}\n                    <button className=\"small-btn\" type=\"submit\"> Log In </button>\n                </form>\n                <div>\n                    <h2>Don't have an account yet?</h2>\n                    <Link to='/sign-up'>\n                      <button className=\"small-btn\">Sign Up</button>\n                    </Link>\n                </div>\n        </main>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n            <h2>Something went wrong.</h2>\n            );\n        }\n        return this.props.children;\n    }\n}\n\nErrorBoundary.defaultProps = {\n    errorMessage: ''\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport ErrorBoundary from './error-boundary'\nimport ValidationError from './validation-error'\nimport AuthApiService from './services/auth-api-service'\nimport TokenService from './services/token-service'\n\nexport default class SignUp extends React.Component {\n  state = {\n      error: null,\n      signUpEmail: {\n        value: '',\n        touched: false\n      },\n      signUpPassword: {\n        value: '',\n        touched: false\n      },\n      signUpFirstName: {\n        value: '',\n        touched: false\n      },\n      errors: {\n        signUpEmail: 'You must enter a valid email',\n        signUpPassword: 'You must enter a valid password',\n        signUpFirstName: 'You must enter a valid name'\n      },\n      sessionUser: ''\n  }\n\n  // formatQueryParams(params) {\n  //   const queryItems = Object.keys(params)\n  //       .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`)\n  //   return queryItems.join('&')\n  // }\n\n  updateEmail(email) {\n    this.setState({ signUpEmail: {value: email, touched: true } })\n  }\n\n  updatePassword(password) {\n    this.setState({ signUpPassword: { value: password, touched: true } })\n  }\n\n  updateFirstName(firstName) {\n    this.setState({ signUpFirstName: { value: firstName, touched: true } })\n  }\n\n  updateSessionUser(userId) {\n    this.setState({\n      sessionUser: userId\n    })\n  }\n\n  validateEmail(inputEmail) {\n    if (inputEmail == undefined) {\n       inputEmail = this.state.signUpEmail.value.trim();\n    }\n    const mailFormat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (!inputEmail.match(mailFormat)) {\n      return 'Valid email is required'\n    } return ' '\n  }\n\n  validatePassword(inputPassword) {\n    if (inputPassword == undefined) {\n      inputPassword = this.state.signUpPassword.value.trim();\n   }\n    const passwordFormat = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])\\w{8,}$/;\n    if (!inputPassword.match(passwordFormat)) {\n      return 'Valid password is required'\n    } return ' '\n  }\n\n  validatateFirstName(inputFirstName) {\n    if (inputFirstName == undefined) {\n      inputFirstName = this.state.signUpFirstName.value.trim();\n   }\n    const nameFormat = /^[a-zA-Z\\-]+$/;\n    if (!inputFirstName.match(nameFormat)) {\n      return 'Name needs to be more than 2 characters'\n    } return ' '\n  }\n\n//-------------------------------------------------------------------------------------\n\nhandleSubmit = (event) => {\n  event.preventDefault();\n  const { signUpEmail, signUpPassword, signUpFirstName } = event.target;\n  console.log('email:', signUpEmail.value, 'password:', signUpPassword.value);\n  this.setState({ error: null })\n  AuthApiService.postUser({\n      email: signUpEmail.value,\n      password: signUpPassword.value,\n      first_name: signUpFirstName.value\n  })\n\n  .then(response => {\n      console.log('email:', response)\n      signUpEmail.value = ''\n      signUpPassword.value = ''\n      TokenService.saveAuthToken(response.authToken)\n      TokenService.saveUserId(response.userId)\n      TokenService.saveUserName(response.first_name)\n      this.updateSessionUser(response.userId)\n      window.location = `/home/${response.userId}`\n  }) \n\n  .catch(res => {\n      this.setState({ error: res.error })\n  })  \n\n //let { signUpEmail, signUpFirstName, signUpPassword } = data\n    // if (this.validateEmail(signUpEmail) === '') {\n    //    this.setState({\n    //        error: 'email is not valid'\n    //    })\n    //  }\n \n    //  if (this.validatePassword(signUpPassword) === '') {\n    //    this.setState({\n    //        error: 'password is not valid'\n    //    })\n    //  }\n \n    //  if (this.validatateFirstName(signUpFirstName) === '') {\n    //    this.setState({\n    //      error: 'first name is not valid'\n    //    })\n    //  }\n}\n\n//--------------------------------------------------------------------------------------\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n//     //create an object to store the search filters\n//     const data = {}\n//     //get all the from data from the form component\n//     const formData = new FormData(e.target)\n\n//     //for each of the keys in form data populate it with form value\n//     for (let value of formData) {\n//         data[value[0]] = value[1]\n//     }\n//     console.log(data)\n\n//     let { signUpEmail, signUpFirstName, signUpPassword } = data\n//     if (this.validateEmail(signUpEmail) === '') {\n//       this.setState({\n//           error: 'email is not valid'\n//       })\n//     }\n\n//     if (this.validatePassword(signUpPassword) === '') {\n//       this.setState({\n//           error: 'password is not valid'\n//       })\n//     }\n\n//     if (this.validatateFirstName(signUpFirstName) === '') {\n//       this.setState({\n//         error: 'first name is not valid'\n//       })\n//     }\n\n//     // this.setState({\n//     //   signUpEmail.value: data.signUpEmail, \n//     //   signUpFirstName.value : data.signUpFirstName,\n//     //   signUpPassword.value: data.signUpPassword\n     \n//     // })\n\n//   //POST request to API endpoint (/users)\n\n//   //check if the state is populated with the search params data\n//   console.log(this.state)\n//   console.log(data.signUpEmail)\n\n//   const searchURL = `${config.API_ENDPOINT}/users`\n//   const user = {\n//     email: data.signUpEmail,\n//     password: data.signUpPassword,\n//     first_name: data.signUpFirstName,\n//   }\n//   console.log(JSON.stringify(user))\n//   // const queryString = this.formatQueryParams(data)\n\n//    //sent all the params to the final url\n//    // const url = searchURL + '?' + queryString\n\n//    console.log(searchURL)\n\n//     //define the API call parameters\n//     const options = {\n//         method: 'POST',\n//         headers: {\n//             //\"Authorization\": \"\",\n//             \"Content-Type\": \"application/json\"\n//         },\n//         body: JSON.stringify(user)\n//     }\n\n//     console.log(options);\n\n//     //useing the url and paramters above make the api call\n//     fetch(searchURL, options)\n\n//         // if the api returns data ...\n        \n//         .then(res => {\n//             if (!res.ok) {\n//               console.log(res)\n//                 throw new Error('Something went wrong, please try again later.')\n//             }\n//              // ... convert it to json\n//              return res.json()\n//         })\n//           //use the json api output\n//         .then(data => {\n//           //check if there is meaningfull data\n//           console.log(data);\n//           // check if there are no results\n//           if (data.totalItems === 0) {\n//             throw new Error('No data found')\n//         }\n//         window.location = '/home'\n//       })\n//         .catch(err => {\n//           this.setState({\n//             error: err.message\n//         })\n//         console.log(err);\n//       })\n// }\n//--------------------------------------------------------------------------------------\n\n  render() {\n    const emailError = this.validateEmail();\n    const passwordError = this.validatePassword();\n    const nameError = this.validatateFirstName();\n    return (\n      <ErrorBoundary>\n      <div className=\"App\">\n        <main>\n            <h1>Sign Up</h1>\n                <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\n                \n                    <div className=\"sign-up-email\">\n                    <label className =\"user-label\" htmlFor=\"email\">Email</label>\n                    <input \n                      name=\"signUpEmail\"\n                      type=\"text\" \n                      id=\"email\" \n                      placeholder=\"Email\"\n                      required\n                      onChange={e => this.updateEmail(e.target.value)}\n                    />\n                    {this.state.signUpEmail.touched && <ValidationError message={emailError} />}\n                    </div>\n                    <div className=\"sign-up-password\">\n                    <label className =\"user-label\" htmlFor=\"password\">Password</label>\n                    <input \n                      name=\"signUpPassword\"\n                      type=\"password\" \n                      id=\"password\" \n                      placeholder=\"Password\"\n                      required\n                      onChange={e => this.updatePassword(e.target.value)}\n                    /> \n                    {this.state.signUpPassword.touched && <ValidationError message={passwordError} />}\n                    </div>\n                    <div className=\"sign-up-name\">\n                    <label className =\"user-label\" htmlFor=\"fname\">First Name</label>\n                    <input \n                      name=\"signUpFirstName\"\n                      type=\"text\" \n                      id=\"fname\" \n                      placeholder=\"First Name\"\n                      required\n                      onChange={e => this.updateFirstName(e.target.value)}\n                    /> \n                    {this.state.signUpFirstName.touched && <ValidationError message={nameError} />}\n                    </div>\n                    <button className=\"small-btn\" type=\"submit\">Sign Up!</button>\n                </form>\n                <div>\n                    <h2>Already have an account?</h2>\n                    <button\n                    className=\"small-btn\">\n                      <Link\n                        to='/login'>\n                      Login\n                      </Link>\n                    </button>\n                </div>\n        </main>\n      </div>\n      </ErrorBoundary>\n    );\n  }\n}\n","import React from 'react';\nimport CircleButton from './CircleButton/circle-button'\n\nexport default function ViewPastWorkout(props) {\n  console.log(props.match.params.workout_id)\n  return (\n    <div className=\"App\">\n      <main className=\"main\">\n        {props.appSavedWorkoutDetails.map(workoutDetail=> {\n          if (props.match.params.workout_id == workoutDetail.workouts_id) {\n            return (\n              <div>\n                <h2 key=\"reps\">{workoutDetail.exercise_reps}</h2>\n                <h3 key=\"title\">{workoutDetail.title}</h3>\n                <h3 key=\"desc\">{workoutDetail.description}</h3>\n              </div>\n            )\n          }})\n          }            \n            <CircleButton onClick={props.history.goBack}>\n          Go Back\n        </CircleButton>\n        </main>\n    </div>\n    \n  );\n}\n","import React from \"react\";\n\nconst Checkbox = ({ label, isSelected, onCheckboxChange }) => (\n  <div className=\"App\">\n    <div className=\"row\">\n    <label className={isSelected ? 'selected-checkbox' : ''}>\n      <input\n        type=\"checkbox\"\n        name={label}\n        checked={isSelected}\n        onChange={onCheckboxChange}\n        className=\"form-check-input\"\n      />\n      {label}\n    </label>\n    </div>\n  </div>\n);\n\nexport default Checkbox;","import React, { Component } from \"react\";\nimport Checkbox from './new-workout-checkbox';\nimport config from './config'\nimport TokenService from './services/token-service.js';\n\nconst OPTIONS = ['Arms', 'Legs', 'Chest', 'Back', 'Core', 'Cardio', 'Advanced'];\n\nclass CreateNewWorkout extends Component {\n  state = {\n    checkboxes: OPTIONS.reduce(\n      (options, option) => ({\n        ...options,\n        [option]: false\n      }),\n      {}\n    ),\n    workoutTimeValue: '',\n    workoutTypeValue: '',\n    workoutNameValue: '',\n    isSubmitted: false,\n    savedWorkouts: [],\n    savedWorkoutDetails: [],\n    sessionUser: ''\n  };\n\n  updateSessionUser(userId) {\n    this.setState({\n      sessionUser: userId\n    })\n  }\n\n  componentDidMount() {\n      this.updateSessionUser(sessionStorage.user_id)\n      let user = this.state.sessionUser\n      console.log('component SavedWorkouts is mounting')\n      //get workouts by user ID\n      let getWorkoutUrl = `${config.API_ENDPOINT}/workouts/user/${TokenService.getUserId()}`;\n      fetch(getWorkoutUrl)\n          .then(response => response.json())\n          //map over the workouts by ID, returning each workout\n          //so that we can get the individual workout details for that workout (including the exercises)\n          .then(workouts => {\n              workouts.map((workout) => {\n                  // console.log(workout)\n                  //------mapping workouts to get workout details---------------------\n                  let getWorkoutDetailsUrl = `${config.API_ENDPOINT}/workoutdetails/workout/${workout.id}`;\n                  fetch(getWorkoutDetailsUrl)\n                      .then(response => response.json())\n                      .then(workoutDetails => {\n                          this.setState({\n                              savedWorkoutDetails: workoutDetails\n                              //savedWorkoutDetails: [...this.state.savedWorkoutDetails, ...workoutDetails]\n                          });\n                            //console.log(workoutDetails)\n                        })\n                      .catch(error => this.setState({ error }))\n                  //---------------------------\n                })\n              this.setState({\n                  savedWorkouts: workouts\n              });\n            })\n    }\n\n  selectAllCheckboxes = isSelected => {\n    Object.keys(this.state.checkboxes).forEach(checkbox => {\n      this.setState(prevState => ({\n        checkboxes: {\n          ...prevState.checkboxes,\n          [checkbox]: isSelected\n        }\n      }));\n    });\n  };\n\n  handleCheckboxChange = changeEvent => {\n    const { name } = changeEvent.target;\n\n    this.setState(prevState => ({\n      checkboxes: {\n        ...prevState.checkboxes,\n        [name]: !prevState.checkboxes[name]\n      }\n    }));\n  };\n\n  handleTimeChange = (e) => {\n    this.setState({ \n      workoutTimeValue: e.target.value\n    })\n  }\n\n  handleTypeChange = (e) => {\n    this.setState({\n      workoutTypeValue: e.target.value\n    })\n  }\n\n  handleNameChange = (e) => {\n    this.setState({\n      workoutNameValue: e.target.value\n    })\n  }\n\n  checkString(inputString) {\n    let outputText = inputString;\n    if (inputString === undefined) {\n        outputText = \"\";\n    }\n    if (inputString == null) {\n        outputText = \"\";\n    }\n    return outputText;\n  }\n\n  //POST to '/api/users' but randomize the data given the choices....\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    Object.keys(this.state.checkboxes)\n      .filter(checkbox => this.state.checkboxes[checkbox])\n      .forEach(checkbox => {\n        //console.log(checkbox, \"is selected.\");\n    });\n\n    //create an object to store the search filters\n    const data = {}\n    //get all the from data from the form component\n    const formData = new FormData(e.target)\n\n     //for each of the keys in form data populate it with form value\n     for (let value of formData) {\n        data[value[0]] = value[1]\n    }\n    console.log(data)\n    \n    let payload = {\n      is_advanced: this.checkString(data.Advanced),\n      is_arms: this.checkString(data.Arms),\n      is_back: this.checkString(data.Back),\n      is_cardio: this.checkString(data.Cardio),\n      is_chest: this.checkString(data.Chest),\n      is_core: this.checkString(data.Core),\n      is_legs: this.checkString(data.Legs),\n      total_length: data.workoutTimeValue, \n      workout_type: data.workoutTypeValue,\n      workouts_name: data.workoutNameValue,\n      user_id: sessionStorage.user_id\n    }\n\n    console.log(payload)\n  \n    fetch(`${config.API_ENDPOINT}/workouts`, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n        },\n        body: JSON.stringify(payload),\n      })\n        // if the api returns data ...\n        .then(res => {\n            if (!res.ok) {\n                throw new Error('Something went wrong, please try again later.')\n            }\n             // ... convert it to json\n             return res.json()\n        })\n            // use the json api output\n        .then(data => {\n          //check if there is meaningfull data\n          console.log(data);\n          // check if there are no results\n          if (data.totalItems === 0) {\n            throw new Error('No data found')\n          }\n          this.setState({\n              savedWorkouts: [...this.state.savedWorkouts, data.workout],\n              savedWorkoutDetails: data.workoutDetails\n          });\n          this.props.saveNewWorkout(data);\n        //  window.location = `/create-workout`\n      })\n        .catch(err => {\n          this.setState({\n            error: err.message\n        })\n      })\n\n      this.setState({\n        workoutNameValue: data.workoutNameValue,\n        workoutTimeValue: data.workoutTimeValue,\n        workoutTypeValue: data.workoutTypeValue,\n        isSubmitted: true\n      })\n  };\n\n  createCheckbox = option => (\n    <Checkbox\n      label={option}\n      isSelected={this.state.checkboxes[option]}\n      onCheckboxChange={this.handleCheckboxChange}\n      key={option}\n    />\n  );\n\n  createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n\n  render() {\n    const showWorkouts = \n    this.state.savedWorkouts.map((workout, id) => {\n    return (\n      <div className=\"workouts-list\" key={id}>\n        <h2 className=\"workouts-list-name\"> {workout.workouts_name} </h2>\n          <p> {workout.total_length} minutes</p>\n          <p> {workout.workout_type} </p>\n      </div>)\n    });\n\n    let showWorkoutDetails = []\n    for (let i = 0; i < this.state.savedWorkoutDetails.length; i++) {\n        showWorkoutDetails.push(this.state.savedWorkoutDetails[i])\n        //console.log(showWorkoutDetails)\n    }\n    showWorkoutDetails = showWorkoutDetails.map(workoutDetail => {\n        let workoutDetailTitle = workoutDetail.title\n        let workoutDetailReps = workoutDetail.exercise_reps\n        let workoutDetailDescription = workoutDetail.description\n        return (\n            <div className=\"workout-details\">\n                <h2 key=\"reps\" className=\"exercise-reps\"> {workoutDetailReps} </h2>\n                <h3 key=\"title\" className=\"exercise-title\"> {workoutDetailTitle} </h3>\n                <h3 key=\"desc\" className=\"exercise-desc\"> {workoutDetailDescription} </h3>\n            </div>\n        )\n    });\n\n    // const viewWorkout = \n    // <ViewPastWorkout\n    //     title={this.state.savedWorkouts.workouts_name}\n    //     workoutTime={this.state.savedWorkouts.total_length}\n    //     workoutType={this.state.savedWorkouts.workout_type}\n        \n    // />\n\n    //  this.state.savedWorkoutDetails.map((workoutDetails, id) => {\n    //  return (\n    //    <div className=\"workout-details\" key={id}>\n    //     <p className=\"exercise-reps\"> {workoutDetails.exercise_reps} </p> \n    //    </div>)\n    // });\n\n    //savedExercises is an empty array\n    // console.log(this.state)\n    // console.log(this.state.savedExercises.length)\n    // let showWorkoutExercises = ''\n    // if (this.state.savedExercises.length == 0) {\n    //     console.log('HELLO')\n    //     showWorkoutExercises = \n    //         <div className=\"workout-exercises\">\n    //             <p> No Exercises </p>\n    //         </div>\n    // } else {\n    //     showWorkoutExercises = \n    //     this.state.savedExercises.map((exercises, id) => {\n    //     return (\n    //       <div className=\"workout-exercises\" key={id}>\n    \n    //         <h4> {exercises.title} </h4>\n    //           <p> {exercises.description} </p>\n    //       </div>)\n    //     }); \n    // }\n    //empty array\n    // console.log(this.state.savedExercises)\n\n    return (\n      <div className=\"App\">\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <form onSubmit={this.handleFormSubmit}>\n                <h2 className=\"workout-question-1\">Which muscle groups would you like to work?</h2>\n                  <div className=\"checkbox\">\n                    {this.createCheckboxes()}\n                  </div>\n\n            <h2 className=\"workout-question-2\">How long do you want to workout for?</h2>\n              <div className=\"workout-time answer-2\">\n                <input type=\"radio\" id=\"time-1\"name=\"workoutTimeValue\" value=\"5\" onClick={this.handleTimeChange} />\n                <label htmlFor=\"time-1\">5 minutes</label>\n\n                <input type=\"radio\" id=\"time-2\" name=\"workoutTimeValue\" value=\"10\" />\n                <label htmlFor=\"time-2\">10 minutes</label>\n                \n                <input type=\"radio\" id=\"time-3\" name=\"workoutTimeValue\" value=\"15\" />\n                <label htmlFor=\"time-3\">15 minutes</label>\n                \n                <input type=\"radio\" id=\"time-4\" name=\"workoutTimeValue\" value=\"20\" />\n                <label htmlFor=\"time-4\">20 minutes</label>\n                \n                <input type=\"radio\" id=\"time-5\" name=\"workoutTimeValue\" value=\"25\" />\n                <label htmlFor=\"time-5\">25 minutes</label>\n                \n                <input type=\"radio\" id=\"time-6\" name=\"workoutTimeValue\" value=\"30\" />\n                <label htmlFor=\"time-6\">30 minutes</label>\n              </div>    \n\n              <h2 className=\"workout-question-3\">What style of workout would you like?</h2>\n                <div className=\"workout-type answer-3\">\n                \n                <input type=\"radio\" id=\"emom\" name=\"workoutTypeValue\" value=\"EMOM\" onClick={this.handleTypeChange} />\n                <label htmlFor=\"emom\">EMOM (Every Minute On the Minute)</label>\n                \n                <input type=\"radio\" id=\"amrap\" name=\"workoutTypeValue\" value=\"AMRAP\" />\n                <label htmlFor=\"amrap\">AMRAP (As Many Rounds As Possible)</label>\n                \n                {/* <input type=\"radio\" id=\"rft\" name=\"workoutTypeValue\" value=\"RFT\" />  \n                <label htmlFor=\"rft\">RFT (Rounds For Time)</label>   */}\n                </div>\n                <br />\n                <h2>Name Your Workout:</h2>\n                <div className=\"workouts-name\">\n                  <input \n                    name=\"workoutNameValue\"\n                    type=\"text\" \n                    id=\"workouts-name-input\"\n                    placeholder=\"Example: Workout 1\"\n                    onChange={this.handleNameChange}\n                  />\n                </div>\n                <br />\n                <button type=\"submit\" className=\"big-btn\">\n                  Submit\n                </button>\n              {/* </div> */}\n            </form>\n            {/* {this.state.isSubmitted && showWorkouts[showWorkouts.length - 1]} */}\n            {showWorkouts[showWorkouts.length - 1]}\n            {showWorkoutDetails}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CreateNewWorkout;","import React from 'react';\n\n\nfunction NotFound() {\n  return (\n    <div>\n      <h1>Page Not Found!</h1>\n    </div>\n  );\n}\n\nexport default NotFound;","import React from 'react';\nimport { Route, Link, Switch } from 'react-router-dom'\nimport config from './config'\nimport TokenService from './services/token-service'\nimport './App2.css';\nimport LandingPage from './landing-page'\nimport Navbar from './navbar'\nimport PersonalizedHomePage from './personalized-home-page'\nimport PastWorkouts from './past-workouts'\nimport Header from './header'\nimport Login from './log-in';\nimport SignUp from './sign-up';\nimport ViewPastWorkout from './view-past-workout';\nimport CreateNewWorkout from './create-new-workout'\nimport NotFoundPage from './not-found-page'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      first_name: '',\n      appSavedWorkouts: [],\n      appSavedWorkoutDetails: [],\n      sessionUser: ''\n    }\n  }\n\n  updateSessionUser(userId) {\n    this.setState({\n      sessionUser: userId\n    })\n  }\n\n  //------------------------------------------------\n  componentDidMount(){\n    //get workouts by user ID\n    let getWorkoutUrl = `${config.API_ENDPOINT}/workouts/user/${TokenService.getUserId()}`;\n    fetch(getWorkoutUrl)\n        .then(response => response.json())\n        //map over the workouts by ID, returning each workout\n        //so that we can get the individual workout details for that workout (including the exercises)\n        .then(workouts => {\n            this.setState({\n                appSavedWorkouts: workouts\n            });\n      })\n\n      //get all workout details for all workouts to use in Past Workouts component\n      let getWorkoutDetailsUrl = `${config.API_ENDPOINT}/workoutdetails/workout/`;\n        fetch(getWorkoutDetailsUrl)\n        .then(response => response.json())\n        .then(workoutDetails => {\n            this.setState({\n              appSavedWorkoutDetails: workoutDetails\n            });\n        })\n        .catch(error => this.setState({ error }))\n  }\n  \n  //---------------------------------------------------\n\n  updateAppSavedWorkouts = newWorkout => {\n    this.setState({\n      appSavedWorkouts: [...this.state.appSavedWorkouts, newWorkout]\n    })\n  }\n  \n  //renders the Navbar\n  renderNav() {\n    return (\n      <div>\n        <Navbar />\n      </div>\n    )\n  }\n\n  //renders all of the routes \n  renderMainPages = () => {\n    console.log(this.state.appSavedWorkouts)\n    console.log(this.state.appSavedWorkoutDetails)\n    return (\n      <div className=\"main-pages\">\n      <Switch>        \n        <Route \n          exact\n          path='/'\n          component={LandingPage}\n        />\n        <Route \n          exact\n          path={`/home`}\n          component={PersonalizedHomePage}\n        />\n        <Route \n          exact\n          path='/create-workout'\n          render={(props) => <CreateNewWorkout {...props} saveNewWorkout={this.updateAppSavedWorkouts} />}\n        />\n        <Route \n          exact\n          path={`/past-workouts/${this.state.sessionUser}`}\n          render={(props) => <PastWorkouts {...props} appSavedWorkouts={this.state.appSavedWorkouts} \n            appSavedWorkoutDetails={this.state.appSavedWorkoutDetails}\n          />}\n        />\n        <Route \n          exact\n          path='/login'\n          component={Login}\n        />\n        <Route \n          exact\n          path='/sign-up'\n          component={SignUp}\n        />\n        <Route \n          exact\n          //key={path}\n          //path={path}\n          path='/past-workouts/:workout_id'\n          render={(props) => <ViewPastWorkout {...props}\n          appSavedWorkoutDetails={this.state.appSavedWorkoutDetails} />}\n        />\n        <Route \n          component={NotFoundPage}\n        />\n      </Switch>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <nav className=\"app-nav\"> {this.renderNav()} </nav>\n        <header>\n            <Link to='/'>\n              <Header />\n            </Link>\n        </header>\n\n        <main>\n          {this.renderMainPages()}\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}