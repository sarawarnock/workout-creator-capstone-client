[{"/Users/sarawarnock/Projects/workout-creator-capstone-client/src/index.js":"1","/Users/sarawarnock/Projects/workout-creator-capstone-client/src/sign-up-route.js":"2","/Users/sarawarnock/Projects/workout-creator-capstone-client/src/login-route.js":"3","/Users/sarawarnock/Projects/workout-creator-capstone-client/src/services/idle-service-lf.js":"4","/Users/sarawarnock/Projects/workout-creator-capstone-client/src/services/auth-api-service-lf.js":"5","/Users/sarawarnock/Projects/workout-creator-capstone-client/src/view-past-workout.js":"6","/Users/sarawarnock/Projects/workout-creator-capstone-client/src/past-workouts.js":"7","/Users/sarawarnock/Projects/workout-creator-capstone-client/src/create-new-workout-lf.js":"8","/Users/sarawarnock/Projects/workout-creator-capstone-client/src/App-lf.js":"9","/Users/sarawarnock/Projects/workout-creator-capstone-client/src/services/workout-api-service.js":"10","/Users/sarawarnock/Projects/workout-creator-capstone-client/src/past-workouts-sw.js":"11","/Users/sarawarnock/Projects/workout-creator-capstone-client/src/context.js":"12","/Users/sarawarnock/Projects/workout-creator-capstone-client/src/landing-page.js":"13","/Users/sarawarnock/Projects/workout-creator-capstone-client/src/config.js":"14","/Users/sarawarnock/Projects/workout-creator-capstone-client/src/header.js":"15","/Users/sarawarnock/Projects/workout-creator-capstone-client/src/personalized-home-page.js":"16","/Users/sarawarnock/Projects/workout-creator-capstone-client/src/not-found-page.js":"17","/Users/sarawarnock/Projects/workout-creator-capstone-client/src/login-form.js":"18","/Users/sarawarnock/Projects/workout-creator-capstone-client/src/services/token-service-lf.js":"19"},{"size":358,"mtime":1607133044997,"results":"20","hashOfConfig":"21"},{"size":826,"mtime":1607133496101,"results":"22","hashOfConfig":"21"},{"size":728,"mtime":1607133489940,"results":"23","hashOfConfig":"21"},{"size":1310,"mtime":1607133044999,"results":"24","hashOfConfig":"21"},{"size":2836,"mtime":1607133044999,"results":"25","hashOfConfig":"21"},{"size":2433,"mtime":1607136909879,"results":"26","hashOfConfig":"21"},{"size":1585,"mtime":1599587020981,"results":"27","hashOfConfig":"21"},{"size":10425,"mtime":1607133044997,"results":"28","hashOfConfig":"21"},{"size":3715,"mtime":1607136950851,"results":"29","hashOfConfig":"21"},{"size":1829,"mtime":1607211707017,"results":"30","hashOfConfig":"21"},{"size":1802,"mtime":1607210854173,"results":"31","hashOfConfig":"21"},{"size":2565,"mtime":1607133044997,"results":"32","hashOfConfig":"21"},{"size":918,"mtime":1607133044998,"results":"33","hashOfConfig":"21"},{"size":350,"mtime":1607205855562,"results":"34","hashOfConfig":"21"},{"size":1246,"mtime":1607133044997,"results":"35","hashOfConfig":"21"},{"size":644,"mtime":1598210996951,"results":"36","hashOfConfig":"21"},{"size":145,"mtime":1597611322190,"results":"37","hashOfConfig":"21"},{"size":2225,"mtime":1607210788158,"results":"38","hashOfConfig":"21"},{"size":1707,"mtime":1607133044999,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"y00f6n",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sarawarnock/Projects/workout-creator-capstone-client/src/index.js",[],["83","84"],"/Users/sarawarnock/Projects/workout-creator-capstone-client/src/sign-up-route.js",[],"/Users/sarawarnock/Projects/workout-creator-capstone-client/src/login-route.js",[],"/Users/sarawarnock/Projects/workout-creator-capstone-client/src/services/idle-service-lf.js",[],"/Users/sarawarnock/Projects/workout-creator-capstone-client/src/services/auth-api-service-lf.js",[],"/Users/sarawarnock/Projects/workout-creator-capstone-client/src/view-past-workout.js",["85","86","87","88","89"],"/Users/sarawarnock/Projects/workout-creator-capstone-client/src/past-workouts.js",[],"/Users/sarawarnock/Projects/workout-creator-capstone-client/src/create-new-workout-lf.js",["90","91"],"import React, { Component } from \"react\";\nimport Checkbox from './new-workout-checkbox';\nimport config from './config'\nimport TokenService from './services/token-service-lf';\n\nconst OPTIONS = ['Arms', 'Legs', 'Chest', 'Back', 'Core', 'Cardio', 'Advanced'];\n\nclass CreateNewWorkout extends Component {\n  state = {\n    checkboxes: OPTIONS.reduce(\n      (options, option) => ({\n        ...options,\n        [option]: false\n      }),\n      {}\n    ),\n    workoutTimeValue: '',\n    workoutTypeValue: '',\n    workoutNameValue: '',\n    isSubmitted: false,\n    savedWorkouts: [],\n    savedWorkoutDetails: [],\n    sessionUser: ''\n  };\n\n  updateSessionUser(userId) {\n    this.setState({\n      sessionUser: userId\n    })\n  }\n\n  componentDidMount() {\n      this.updateSessionUser(sessionStorage.user_id)\n    \n      console.log('component SavedWorkouts is mounting')\n      //get workouts by user ID\n      let getWorkoutUrl = `${config.API_ENDPOINT}/workouts/user/${TokenService.getUserId()}`;\n      fetch(getWorkoutUrl)\n          .then(response => response.json())\n          //map over the workouts by ID, returning each workout\n          //so that we can get the individual workout details for that workout (including the exercises)\n          .then(workouts => {\n              workouts.map((workout) => {\n                  // console.log(workout)\n                  //------mapping workouts to get workout details---------------------\n                  let getWorkoutDetailsUrl = `${config.API_ENDPOINT}/workoutdetails/workout/${workout.id}`;\n                  fetch(getWorkoutDetailsUrl)\n                      .then(response => response.json())\n                      .then(workoutDetails => {\n                          this.setState({\n                              savedWorkoutDetails: workoutDetails\n                              //savedWorkoutDetails: [...this.state.savedWorkoutDetails, ...workoutDetails]\n                          });\n                            //console.log(workoutDetails)\n                        })\n                      .catch(error => this.setState({ error }))\n                  //---------------------------\n                })\n              this.setState({\n                  savedWorkouts: workouts\n              });\n            })\n    }\n\n  selectAllCheckboxes = isSelected => {\n    Object.keys(this.state.checkboxes).forEach(checkbox => {\n      this.setState(prevState => ({\n        checkboxes: {\n          ...prevState.checkboxes,\n          [checkbox]: isSelected\n        }\n      }));\n    });\n  }\n  \n  handleCheckboxChange = changeEvent => {\n    const { name } = changeEvent.target;\n\n    this.setState(prevState => ({\n      checkboxes: {\n        ...prevState.checkboxes,\n        [name]: !prevState.checkboxes[name]\n      }\n    }));\n  };\n\n  handleTimeChange = (e) => {\n    this.setState({ \n      workoutTimeValue: e.target.value\n    })\n  }\n\n  handleTypeChange = (e) => {\n    this.setState({\n      workoutTypeValue: e.target.value\n    })\n  }\n\n  handleNameChange = (e) => {\n    this.setState({\n      workoutNameValue: e.target.value\n    })\n  }\n\n  checkString(inputString) {\n    let outputText = inputString;\n    if (inputString === undefined) {\n        outputText = \"\";\n    }\n    if (inputString == null) {\n        outputText = \"\";\n    }\n    return outputText;\n  }\n\n  //POST to '/api/workouts' but randomize the data given the choices\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    Object.keys(this.state.checkboxes)\n      .filter(checkbox => this.state.checkboxes[checkbox])\n      .forEach(checkbox => {\n        //console.log(checkbox, \"is selected.\");\n    });\n\n    //create an object to store the search filters\n    const data = {}\n    //get all the from data from the form component\n    const formData = new FormData(e.target)\n\n     //for each of the keys in form data populate it with form value\n     for (let value of formData) {\n        data[value[0]] = value[1]\n    }\n    console.log(data)\n    \n    let payload = {\n      is_advanced: this.checkString(data.Advanced),\n      is_arms: this.checkString(data.Arms),\n      is_back: this.checkString(data.Back),\n      is_cardio: this.checkString(data.Cardio),\n      is_chest: this.checkString(data.Chest),\n      is_core: this.checkString(data.Core),\n      is_legs: this.checkString(data.Legs),\n      total_length: data.workoutTimeValue, \n      workout_type: data.workoutTypeValue,\n      workouts_name: data.workoutNameValue,\n      user_id: sessionStorage.user_id\n    }\n\n    console.log(payload)\n  \n    fetch(`${config.API_ENDPOINT}/workouts`, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n        },\n        body: JSON.stringify(payload),\n      })\n        // if the api returns data ...\n        .then(res => {\n            if (!res.ok) {\n                throw new Error('Something went wrong, please try again later.')\n            }\n             // ... convert it to json\n             return res.json()\n        })\n            // use the json api output\n        .then(data => {\n          //check if there is meaningfull data\n          console.log(data);\n          // check if there are no results\n          if (data.totalItems === 0) {\n            throw new Error('No data found')\n          }\n          this.setState({\n              savedWorkouts: [...this.state.savedWorkouts, data.workout],\n              savedWorkoutDetails: data.workoutDetails\n          });\n          this.props.saveNewWorkout(data);\n          window.location = `/past-workouts`\n      })\n        .catch(err => {\n          this.setState({\n            error: err.message\n        })\n      })\n\n      this.setState({\n        workoutNameValue: data.workoutNameValue,\n        workoutTimeValue: data.workoutTimeValue,\n        workoutTypeValue: data.workoutTypeValue,\n        isSubmitted: true\n      })\n  };\n\n  createCheckbox = option => (\n    <Checkbox\n      label={option}\n      isSelected={this.state.checkboxes[option]}\n      onCheckboxChange={this.handleCheckboxChange}\n      key={option}\n    />\n  );\n\n  createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n\n  render() {\n    console.log(this.state.savedWorkouts)\n    console.log(this.state.savedWorkoutDetails)\n    const showWorkouts = \n    this.state.savedWorkouts.map((workout, id) => {\n    return (\n      <div className=\"workouts-list\" key={id}>\n        <h2 className=\"workouts-list-name\"> {workout.workouts_name} </h2>\n          <p> {workout.total_length} minutes</p>\n          <p> {workout.workout_type} </p>\n      </div>)\n    });\n\n    let showWorkoutDetails = []\n    for (let i = 0; i < this.state.savedWorkoutDetails.length; i++) {\n        showWorkoutDetails.push(this.state.savedWorkoutDetails[i])\n    }\n\n    console.log(showWorkoutDetails)\n\n    if (showWorkoutDetails.length !== 0) {\n      showWorkoutDetails = showWorkoutDetails.map(workoutDetail => {\n        let workoutDetailTitle = workoutDetail.title\n        let workoutDetailReps = workoutDetail.exercise_reps\n        let workoutDetailDescription = workoutDetail.description\n        return (\n            <div className=\"workout-details\">\n                <h2 key=\"reps\" className=\"exercise-reps\"> {workoutDetailReps} </h2>\n                <h3 key=\"title\" className=\"exercise-title\"> {workoutDetailTitle} </h3>\n                <h3 key=\"desc\" className=\"exercise-desc\"> {workoutDetailDescription} </h3>\n            </div>\n        )\n      });\n\n      console.log(showWorkoutDetails)\n\n    }\n    else {\n      showWorkoutDetails = `\n        <div className=\"workout-details\">\n          <h3 key=\"title\" className=\"exercise-title\"> No Workout Details </h3>\n        </div>\n      `\n    }\n    \n    return (\n      <div className=\"App\">\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <form onSubmit={this.handleFormSubmit}>\n                <h2 className=\"workout-question-1\">Which muscle groups would you like to work?</h2>\n                  <div className=\"checkbox\">\n                    {this.createCheckboxes()}\n                  </div>\n\n            <h2 className=\"workout-question-2\">How long do you want to workout for?</h2>\n              <div className=\"workout-time answer-2\">\n                <input type=\"radio\" id=\"time-1\"name=\"workoutTimeValue\" value=\"5\" onClick={this.handleTimeChange} />\n                <label htmlFor=\"time-1\">5 minutes</label>\n\n                <input type=\"radio\" id=\"time-2\" name=\"workoutTimeValue\" value=\"10\" />\n                <label htmlFor=\"time-2\">10 minutes</label>\n                \n                <input type=\"radio\" id=\"time-3\" name=\"workoutTimeValue\" value=\"15\" />\n                <label htmlFor=\"time-3\">15 minutes</label>\n                \n                <input type=\"radio\" id=\"time-4\" name=\"workoutTimeValue\" value=\"20\" />\n                <label htmlFor=\"time-4\">20 minutes</label>\n                \n                <input type=\"radio\" id=\"time-5\" name=\"workoutTimeValue\" value=\"25\" />\n                <label htmlFor=\"time-5\">25 minutes</label>\n                \n                <input type=\"radio\" id=\"time-6\" name=\"workoutTimeValue\" value=\"30\" />\n                <label htmlFor=\"time-6\">30 minutes</label>\n              </div>    \n\n              <h2 className=\"workout-question-3\">What style of workout would you like?</h2>\n                <div className=\"workout-type answer-3\">\n                \n                <input type=\"radio\" id=\"emom\" name=\"workoutTypeValue\" value=\"EMOM\" onClick={this.handleTypeChange} />\n                <label htmlFor=\"emom\">EMOM (Every Minute On the Minute)</label>\n                \n                <input type=\"radio\" id=\"amrap\" name=\"workoutTypeValue\" value=\"AMRAP\" />\n                <label htmlFor=\"amrap\">AMRAP (As Many Rounds As Possible)</label>\n\n                </div>\n                <br />\n                <h2>Name Your Workout:</h2>\n                <div className=\"workouts-name\">\n                  <input \n                    name=\"workoutNameValue\"\n                    type=\"text\" \n                    id=\"workouts-name-input\"\n                    placeholder=\"Example: Workout 1\"\n                    onChange={this.handleNameChange}\n                  />\n                </div>\n                <br />\n                <button type=\"submit\" className=\"big-btn\">\n                  Submit\n                </button>\n            </form>\n            {/* {showWorkouts[showWorkouts.length - 1]}\n            {showWorkoutDetails} */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CreateNewWorkout;",["92","93"],"/Users/sarawarnock/Projects/workout-creator-capstone-client/src/App-lf.js",["94"],"/Users/sarawarnock/Projects/workout-creator-capstone-client/src/services/workout-api-service.js",["95"],"/Users/sarawarnock/Projects/workout-creator-capstone-client/src/past-workouts-sw.js",["96"],"/Users/sarawarnock/Projects/workout-creator-capstone-client/src/context.js",[],["97","98"],"/Users/sarawarnock/Projects/workout-creator-capstone-client/src/landing-page.js",[],"/Users/sarawarnock/Projects/workout-creator-capstone-client/src/config.js",["99"],"// export default {\n//     API_ENDPOINT: process.env.REACT_APP_API_ENDPOINT ||\n//     \"http://localhost:8000/api\",\n//     TOKEN_KEY: 'workout-client-auth-token',\n// }\n\nexport default {\n    //API_ENDPOINT: \"https://workout-creator-server.herokuapp.com/api\",\n    API_ENDPOINT: \"http://localhost:8800/api\",\n    TOKEN_KEY: 'workout-client-auth-token',\n}\n","/Users/sarawarnock/Projects/workout-creator-capstone-client/src/header.js",[],"/Users/sarawarnock/Projects/workout-creator-capstone-client/src/personalized-home-page.js",[],"/Users/sarawarnock/Projects/workout-creator-capstone-client/src/not-found-page.js",[],"/Users/sarawarnock/Projects/workout-creator-capstone-client/src/login-form.js",[],"/Users/sarawarnock/Projects/workout-creator-capstone-client/src/services/token-service-lf.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":14},{"ruleId":"104","severity":1,"message":"108","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":22},{"ruleId":"104","severity":1,"message":"109","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":25},{"ruleId":"110","severity":1,"message":"111","line":11,"column":56,"nodeType":"112","messageId":"113","endLine":11,"endColumn":58},{"ruleId":"114","severity":1,"message":"115","line":12,"column":45,"nodeType":"116","messageId":"117","endLine":12,"endColumn":47},{"ruleId":"110","severity":1,"message":"118","line":43,"column":38,"nodeType":"112","messageId":"119","endLine":43,"endColumn":40},{"ruleId":"104","severity":1,"message":"120","line":211,"column":11,"nodeType":"106","messageId":"107","endLine":211,"endColumn":23},{"ruleId":"100","replacedBy":"121"},{"ruleId":"102","replacedBy":"122"},{"ruleId":"104","severity":1,"message":"123","line":16,"column":8,"nodeType":"106","messageId":"107","endLine":16,"endColumn":14},{"ruleId":"104","severity":1,"message":"124","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":13},{"ruleId":"104","severity":1,"message":"125","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":23},{"ruleId":"100","replacedBy":"126"},{"ruleId":"102","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":7,"column":1,"nodeType":"130","endLine":11,"endColumn":2},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'WorkOutContext' is defined but never used.","'WorkoutApiService' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.map() expects a return value from arrow function.","expectedInside","'showWorkouts' is assigned a value but never used.",["131"],["132"],"'config' is defined but never used.","'React' is defined but never used.","'ViewPastWorkout' is defined but never used.",["131"],["132"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]